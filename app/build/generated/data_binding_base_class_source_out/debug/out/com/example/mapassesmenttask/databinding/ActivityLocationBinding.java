// Generated by view binder compiler. Do not edit!
package com.example.mapassesmenttask.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mapassesmenttask.R;
import com.google.android.gms.maps.MapView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLocationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final MaterialButton uiBtnConfirmLocation;

  @NonNull
  public final MaterialCardView uiCvUseCurrentLocation;

  @NonNull
  public final MaterialCardView uiCvUseLocation;

  @NonNull
  public final AppCompatEditText uiEtBusinessLocation;

  @NonNull
  public final AppCompatImageView uiIvBackButton;

  @NonNull
  public final MapView uiMapView;

  @NonNull
  public final ScrollView uiScrollView;

  @NonNull
  public final AppCompatTextView uiTvConfirmLocation;

  @NonNull
  public final AppCompatTextView uiTvUseLocation;

  private ActivityLocationBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout main, @NonNull MaterialButton uiBtnConfirmLocation,
      @NonNull MaterialCardView uiCvUseCurrentLocation, @NonNull MaterialCardView uiCvUseLocation,
      @NonNull AppCompatEditText uiEtBusinessLocation, @NonNull AppCompatImageView uiIvBackButton,
      @NonNull MapView uiMapView, @NonNull ScrollView uiScrollView,
      @NonNull AppCompatTextView uiTvConfirmLocation, @NonNull AppCompatTextView uiTvUseLocation) {
    this.rootView = rootView;
    this.main = main;
    this.uiBtnConfirmLocation = uiBtnConfirmLocation;
    this.uiCvUseCurrentLocation = uiCvUseCurrentLocation;
    this.uiCvUseLocation = uiCvUseLocation;
    this.uiEtBusinessLocation = uiEtBusinessLocation;
    this.uiIvBackButton = uiIvBackButton;
    this.uiMapView = uiMapView;
    this.uiScrollView = uiScrollView;
    this.uiTvConfirmLocation = uiTvConfirmLocation;
    this.uiTvUseLocation = uiTvUseLocation;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLocationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_location, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLocationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.uiBtnConfirmLocation;
      MaterialButton uiBtnConfirmLocation = ViewBindings.findChildViewById(rootView, id);
      if (uiBtnConfirmLocation == null) {
        break missingId;
      }

      id = R.id.uiCvUseCurrentLocation;
      MaterialCardView uiCvUseCurrentLocation = ViewBindings.findChildViewById(rootView, id);
      if (uiCvUseCurrentLocation == null) {
        break missingId;
      }

      id = R.id.uiCvUseLocation;
      MaterialCardView uiCvUseLocation = ViewBindings.findChildViewById(rootView, id);
      if (uiCvUseLocation == null) {
        break missingId;
      }

      id = R.id.uiEtBusinessLocation;
      AppCompatEditText uiEtBusinessLocation = ViewBindings.findChildViewById(rootView, id);
      if (uiEtBusinessLocation == null) {
        break missingId;
      }

      id = R.id.uiIvBackButton;
      AppCompatImageView uiIvBackButton = ViewBindings.findChildViewById(rootView, id);
      if (uiIvBackButton == null) {
        break missingId;
      }

      id = R.id.uiMapView;
      MapView uiMapView = ViewBindings.findChildViewById(rootView, id);
      if (uiMapView == null) {
        break missingId;
      }

      id = R.id.uiScrollView;
      ScrollView uiScrollView = ViewBindings.findChildViewById(rootView, id);
      if (uiScrollView == null) {
        break missingId;
      }

      id = R.id.uiTvConfirmLocation;
      AppCompatTextView uiTvConfirmLocation = ViewBindings.findChildViewById(rootView, id);
      if (uiTvConfirmLocation == null) {
        break missingId;
      }

      id = R.id.uiTvUseLocation;
      AppCompatTextView uiTvUseLocation = ViewBindings.findChildViewById(rootView, id);
      if (uiTvUseLocation == null) {
        break missingId;
      }

      return new ActivityLocationBinding((ConstraintLayout) rootView, main, uiBtnConfirmLocation,
          uiCvUseCurrentLocation, uiCvUseLocation, uiEtBusinessLocation, uiIvBackButton, uiMapView,
          uiScrollView, uiTvConfirmLocation, uiTvUseLocation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
